Graphing ruby projects:
  Features:
  ✔ return dependencies with two positions @done (14-03-11 22:04)
  ✔ what to do with dependecies in blocks @done (14-03-13 21:42)
  ✔ Keep track of the current position in the application @done (14-03-11 22:05)
  ☐ Match the current point to gem/application/core
  ☐ Save a file that's a list of all calls between points
  ✔ Keep count of how many time a call takes place @done (14-03-11 22:34)
  ☐ When block raises, the tracers are not finalized correctly.
  ☐ Create a mode that can be used to record all calls in a webserver.
  Testing:
☐ Run it on a bigger code base with for example capybara tests.
☐ add tests for dynamic created classes, modules and methods
☐ add tests for in eval created classes, modules and methods
✔ add tests for recursive function calls @done (14-03-13 21:42)

/lib/ruby/x.x.x/
/lib/ruby/gems/x.x.x/gems/